// Содержимое слоев Земли
const earthLayers = [
    { name: "Литосфера", depth: "0-60 км", temp: "15°C", description: "Литосфера состоит из земной коры и верхней мантии." },
    { name: "Кора", depth: "0-35 км", temp: "20°C", description: "Кора - самая внешняя часть литосферы, состоит из континентальной и океанической коры." },
    { name: "Верхняя часть мантии", depth: "35-60 км", temp: "1000°C", description: "Составляет верхнюю часть мантии и служит фундаментом для литосферы." },
    { name: "Мантия", depth: "35-2890 км", temp: "2200°C", description: "Мантия состоит из твердых и вязких материалов, из которых образуются магматические породы." },
    { name: "Астеносфера", depth: "100-200 км", temp: "1200°C", description: "Астеносфера - пластичная зона, часть верхней мантии." },
    { name: "Верхняя мезосфера", depth: "35-660 км", temp: "3000°C", description: "Составляет верхнюю часть мантии, где материалы имеют повышенную вязкость." },
    { name: "Нижняя мезосфера", depth: "660-2890 км", temp: "4000°C", description: "Нижняя часть мантии с более плотной структурой." },
    { name: "Внешнее ядро", depth: "2890-5150 км", temp: "5000°C", description: "Внешнее ядро состоит из расплавленных металлов." },
    { name: "Внутреннее ядро", depth: "5150-6371 км", temp: "6000°C", description: "Внутреннее ядро состоит из твердых металлов, таких как железо и никель." }
];

// Функция для создания слоя
const createLayer = (layer: any, index: number) => {
    const layerElement = document.createElement('div');
    layerElement.classList.add('layer');
    layerElement.innerHTML = `
        <h2>${layer.name}</h2>
        <p>Глубина: ${layer.depth}</p>
        <p>Температура: ${layer.temp}</p>
        <p>${layer.description}</p>
    `;
    document.getElementById('earth-layers')?.appendChild(layerElement);
};

// Функция для отображения информации о животном при клике
const displayAnimalInfo = (animal: string) => {
    const infoBox = document.getElementById('animals-info');
    if (infoBox) {
        infoBox.innerHTML = `Информация о ${animal}: Это удивительное животное обитает в подземных глубинах!`;
    }
};

// Инициализация слоев
earthLayers.forEach(createLayer);

// Добавление обработчика для кликов на картинках животных (пример)
document.querySelectorAll('.layer img').forEach((image: HTMLImageElement) => {
    image.addEventListener('click', () => {
        const animalName = image.alt; // Если у изображения есть alt с названием животного
        displayAnimalInfo(animalName);
    });
});


222222222222222222222
let elevator = document.getElementById('elevator');
        let layers = [
            document.getElementById('lithosphere'),
            document.getElementById('mantle'),
            document.getElementById('outer-core'),
            document.getElementById('inner-core')
        ];

        let currentDepth = 0;

        function updateLayers() {
            for (let i = 0; i < layers.length; i++) {
                if (i === currentDepth) {
                    layers[i].style.opacity = 1;
                } else {
                    layers[i].style.opacity = 0;
                }
            }
        }

        function moveElevator(depth) {
            currentDepth = depth;
            elevator.style.transform = `translateY(${depth * 250}px)`;
            updateLayers();
        }

        // Move elevator every 2 seconds
        setInterval(() => {
            if (currentDepth < 3) {
                moveElevator(currentDepth + 1);
            } else {
                moveElevator(0);
            }
        }, 2000);

        3333333333333333333333
        // Типы для работы с элементами
interface Layer {
    id: string;
    element: HTMLDivElement;
}

document.querySelectorAll('.layer img').forEach((image) => {
    const img = image as HTMLImageElement;
    console.log(img.src); // Теперь TypeScript знает, что это HTMLImageElement
});

// Массив слоев Земли
const layers: Layer[] = [
    { id: 'lithosphere', element: document.getElementById('lithosphere') ?? document.createElement('div') },
    { id: 'mantle', element: document.getElementById('mantle') ?? document.createElement('div') },
    { id: 'outer-core', element: document.getElementById('outer-core') ?? document.createElement('div') },
    { id: 'inner-core', element: document.getElementById('inner-core') ?? document.createElement('div') }
];

// Оберните в функцию, чтобы использовать return
(function () {
    const elevator: HTMLImageElement | null = document.getElementById('elevator') as HTMLImageElement;
    const startButton: HTMLElement | null = document.getElementById('start-button');

    if (!elevator || !startButton) {
        console.error('Не найдены необходимые элементы');
        return; // Останавливаем выполнение, если элементы не найдены
    }

    let currentDepth: number = 0;
    let moving: boolean = false;

    // Функция для обновления отображения слоев
    function updateLayers() {
        layers.forEach((layer, index) => {
            // Показываем текущий слой
            layer.element.style.opacity = index === currentDepth ? '1' : '0';
        });
    }

    // Функция для движения лифта
    function moveElevator(depth: number) {
        elevator.style.transform = `translateY(${depth * 250}px)`;
        currentDepth = depth;
        updateLayers();
    }

    // Функция для старта движения лифта
    function startElevator() {
        if (moving) return;

        moving = true;
        let depth = 0;

        const interval = setInterval(() => {
            if (depth < layers.length - 1) {
                moveElevator(depth++);
            } else {
                clearInterval(interval);
                moving = false;  // Лифт завершил движение
            }
        }, 2000);  // Переход к следующему слою каждые 2 секунды
    }

    // Установка события на кнопку "Start Elevator"
    startButton.addEventListener('click', startElevator);
})();

html:
